today <- as.Date(today,format = "%Y-%m-%d", origin="2019-01-01")
df_lac48$idade <- as.integer((today - df_lac48$document.data_nasc)/365)
df_lac48$idade_f <-  case_when(df_lac48$idade < 2 ~ '<2',
df_lac48$idade >= 2  & df_lac48$idade <=  5 ~ '2-5'  ,
df_lac48$idade >= 6  & df_lac48$idade <= 10 ~ '6-10' ,
df_lac48$idade >= 11 & df_lac48$idade <= 12 ~ '11-12',
df_lac48$idade >= 13 & df_lac48$idade <= 18 ~ '13-18',
df_lac48$idade > 18 ~ '>18')
#### exame Gasometria arterial
rm(aux)
BEE <- ex %>% filter(ex$document.cod_exame_filho == 'bee')
head(BEE)
head(BEE)
dim(BEE)
dim(BEE)
BEE$date <- as.POSIXct(BEE$date,format = "%Y-%m-%d %H:%M:%S", origin="2018-01-01")
head(BEE)
str(BEE)
BEE <- arrange(BEE,  atendimento_id, date)
head(BEE,15)
aux<- BEE[!duplicated(BEE$atendimento_id, fromLast=TRUE), ]
aux[aux$atendimento_id==4043496,]
aux <- aux[,c(1,2)]
df_bee <- dplyr::left_join(BEE, aux,
by = 'atendimento_id', copy = FALSE, suffix = c('.bee','.aux'))
dim(df_bee);dim(BEE);dim(aux)
df_bee$tempo <- difftime(df_bee$date.aux,df_bee$date.bee,units='hours')
head(df_bee[,c(1,2,9)],10)
###### Selecting last 48 hours
bee48 <- df_bee %>% filter(tempo <= 48)
head(bee48)
df_bee48 <- dplyr::inner_join(bee48, MR_f2[,c("atendimento_id","document.data_nasc","alta_motivo")],
by = 'atendimento_id', copy = FALSE, suffix = c('.bee','.MR'))
table(df_bee48$alta_motivo, useNA='always')
today  <- Sys.time()
today <- as.Date(today,format = "%Y-%m-%d", origin="2019-01-01")
df_bee48$idade <- as.integer((today - df_bee48$document.data_nasc)/365)
df_bee48$idade_f <-  case_when(df_bee48$idade < 2 ~ '<2',
df_bee48$idade >= 2  & df_bee48$idade <=  5 ~ '2-5'  ,
df_bee48$idade >= 6  & df_bee48$idade <= 10 ~ '6-10' ,
df_bee48$idade >= 11 & df_bee48$idade <= 12 ~ '11-12',
df_bee48$idade >= 13 & df_bee48$idade <= 18 ~ '13-18',
df_bee48$idade > 18 ~ '>18')
d_bee48 <- df_bee48 %>% group_by(atendimento_id) %>% summarise(valor=mean(document.resultado,na.rm=TRUE),
idade = mean(idade), n())
#======================================================================================#
#================ data frames by exams ================================================#
#======================================================================================#
dim(d_pq48)[1]
dim(d_cr48)[1]
dim(d_leu48)[1]
dim(d_bil48)[1]
dim(d_inr48)[1]
dim(d_lac48)[1]
dim(d_gli48)[1]
dim(d_bee48)[1]
#======================================================================================#
#================ data frames by exams ================================================#
#======================================================================================#
dim(d_pq48)[1]
dim(d_cr48)[1]
dim(d_leu48)[1]
dim(d_bil48)[1]
dim(d_inr48)[1]
dim(d_lac48)[1]
###### Selecting last 48 hours
lac48 <- df_lac %>% filter(tempo <= 48)
head(lac48)
df_lac48 <- dplyr::inner_join(lac48, MR_f2[,c("atendimento_id","document.data_nasc","alta_motivo")],
by = 'atendimento_id', copy = FALSE, suffix = c('.lac','.MR'))
table(df_lac48$alta_motivo, useNA='always')
today  <- Sys.time()
today <- as.Date(today,format = "%Y-%m-%d", origin="2019-01-01")
df_lac48$idade <- as.integer((today - df_lac48$document.data_nasc)/365)
df_lac48$idade_f <-  case_when(df_lac48$idade < 2 ~ '<2',
df_lac48$idade >= 2  & df_lac48$idade <=  5 ~ '2-5'  ,
df_lac48$idade >= 6  & df_lac48$idade <= 10 ~ '6-10' ,
df_lac48$idade >= 11 & df_lac48$idade <= 12 ~ '11-12',
df_lac48$idade >= 13 & df_lac48$idade <= 18 ~ '13-18',
df_lac48$idade > 18 ~ '>18')
prop.table(table(df_lac48$alta_motivo,useNA='always'))
d_lac48 <- df_lac48 %>% group_by(atendimento_id) %>% summarise(valor=mean(document.resultado,na.rm=TRUE),
idade = mean(idade), n())
dim(d_lac48)[1]
dim(d_gli48)[1]
dim(d_bee48)[1]
names(d_bil48)
######### RENAME
#d_bil48 <-df_bil48[,c(1,2,7,11,12,13)]
#names(df_bil48)[2] <- "date"
names(d_bil48)[2] <- "BIL"
#d_leu48 <-df_leu48[,c(1,2,7,11,12,13)]
#names(df_leu48)[2] <- "date"
names(d_leu48)[2] <- "LEU"
#d_cr48 <-df_cr48[,c(1,2,7,11,12,13)]
#names(df_cr48)[2] <- "date"
names(d_cr48)[2] <- "CR"
#d_pq48 <-df_pq48[,c(1,2,7,11,12,13)]
#names(df_pq48)[2] <- "date"
names(d_pq48)[2] <- "PQ"
#d_inr48 <-df_inr48[,c(1,2,7,11,12,13)]
#names(df_inr48)[2] <- "date"
names(d_inr48)[2] <- "INR"
#d_lac48 <-df_lac48[,c(1,2,7,11,12,13)]
#names(df_lac48)[2] <- "date"
names(d_lac48)[2] <- "LAC"
#d_bee48 <-df_bee48[,c(1,2,7,11,12,13)]
#names(df_bee48)[2] <- "date"
names(d_bee48)[2] <- "BEE"
#d_gli48 <-df_gli48[,c(1,2,7,11,12,13)]
#names(df_gli48)[2] <- "date"
names(d_gli48)[2] <- "GLI"
dados <- dplyr::full_join(d_pq48, d_cr48,
by = c('atendimento_id'), copy = FALSE, suffix = c('.pq','.cr'))
head(dados)
dim(dados);dim(d_pq48);dim(d_cr48)
dados <- dplyr::full_join(dados, d_leu48,
by = c('atendimento_id'), copy = FALSE, suffix = c('','.leu'))
dados <- dplyr::full_join(dados, d_bil48,
by = c('atendimento_id'), copy = FALSE, suffix = c('','.bil'))
dados <- dplyr::full_join(dados, d_inr48,
by = c('atendimento_id'), copy = FALSE, suffix = c('','.inr'))
dados <- dplyr::full_join(dados, d_lac48,
by = c('atendimento_id'), copy = FALSE, suffix = c('','.lac'))
dados <- dplyr::full_join(dados, d_gli48,
by = c('atendimento_id'), copy = FALSE, suffix = c('','.gli'))
dados <- dplyr::full_join(dados, d_bee48,
by = c('atendimento_id'), copy = FALSE, suffix = c('','.bee'))
dados <- dplyr::left_join(dados, MR_f2[,c("atendimento_id","alta_motivo","document.data_nasc")],
by = c('atendimento_id'), copy = FALSE, suffix = c('.dados',''))
dados_aux <- dados[,c(1,2,5,8,11,14,17,20,23,26,27)]
dadosNA <- dados_aux %>% filter(is.na(PQ) & is.na(CR) & is.na(LEU) & is.na(BIL) & is.na(INR) &
is.na(LAC) & is.na(GLI) & is.na(BEE) )
dados2 <- anti_join(dados_aux, dadosNA, by = 'atendimento_id', copy=FALSE)
dados2$alta_motivo <- as.factor(dados2$alta_motivo)
names(dados2)
dados2 <- dados2[,-1]
today  <- Sys.time()
today <- as.Date(today,format = "%Y-%m-%d", origin="2019-01-01")
dados2$idade <- as.integer((today - dados2$document.data_nasc)/365)
dados2 <- dados2[,-10]
# Create the training and test datasets
set.seed(1234567)
# Step 1: Get row numbers for the training data
trainRowNumbers <- createDataPartition(dados2$alta_motivo, p=0.7, list=FALSE)
# Step 2: Create the training  dataset
trainData <- dados2[trainRowNumbers,]
# Step 3: Create the test dataset
testData <- dados2[-trainRowNumbers,]
df_g1 <- dados2 %>% filter(LEU < 100000)
set.seed(1234567)
df_g1 <- sample_n(df_g1, 700)
df_g1$id <- 1:dim(df_g1)[1]
p1 <- ggplot(df_g1,aes(x=id, y=LEU)) +
#geom_line(aes(color = alta_motivo)) +
geom_smooth(data=df_g1,method = "glm", span = 0.2, se = TRUE, colour='darkorange') +
theme(legend.position="top") + labs(fill = "") +
facet_grid(.~alta_motivo) +
geom_point(color = palette_light()[[1]]) +
theme_tq() +
labs(title = "Ajuste via GLM",
caption = "período Laura")  + xlab("") + ylab("Medida do exame")
p_title <- ggdraw() +
draw_label("Leucócitos", size = 18, fontface = "bold", colour = palette_light()[[1]])
plot_grid(p_title, p1, ncol = 1, rel_heights = c(0.1, 1, 1))
df_g1 <- dados2 %>% filter(LEU < 100000)
set.seed(1234567)
df_g1 <- sample_n(df_g1, 700)
df_g1$id <- 1:dim(df_g1)[1]
p1 <- ggplot(df_g1,aes(x=id, y=LEU)) +
#geom_line(aes(color = alta_motivo)) +
geom_smooth(data=df_g1,method = "loess", span = 0.2, se = TRUE, colour='darkorange') +
theme(legend.position="top") + labs(fill = "") +
facet_grid(.~alta_motivo) +
geom_point(color = palette_light()[[1]]) +
theme_tq() +
labs(title = "Ajuste via Spline",
caption = "período Laura")  + xlab("") + ylab("Medida do exame")
plot_grid(p_title, p1, ncol = 1, rel_heights = c(0.1, 1, 1))
p1 <- ggplot(df_g1,aes(x=id, y=idade)) +
#geom_line(aes(color = alta_motivo)) +
geom_smooth(data=df_g1,method = "glm", span = 0.2, se = TRUE, colour='darkorange') +
theme(legend.position="top") + labs(fill = "") +
facet_grid(.~alta_motivo) +
geom_point(color = palette_light()[[1]]) +
theme_tq() +
labs(title = "Ajuste via GLM",
caption = "período Laura")  + xlab("") + ylab("Idade em anos")
p_title <- ggdraw() +
draw_label("Idade do paciente", size = 18, fontface = "bold", colour = palette_light()[[1]])
plot_grid(p_title, p1, ncol = 1, rel_heights = c(0.1, 1, 1))
# Create the knn imputation model on the training data
preProcess_missingdata_model <- preProcess(trainData, method='knnImpute')
preProcess_missingdata_model
library(RANN)  # required for knnInpute
trainData <- predict(preProcess_missingdata_model, newdata = trainData)
anyNA(trainData)
trainData <- predict(preProcess_missingdata_model, newdata = trainData)
dados <- read.csv('http://leg.ufpr.br/lib/exe/fetch.php/pessoais:total.csv',h=TRUE)
head(dados)
dados <- read.csv('http://leg.ufpr.br/lib/exe/fetch.php/pessoais:total.csv',h=TRUE,sep=';')
head(dados)
dim(dados)
MR <- read.csv('records.csv',sep=';',h=T)
head(MR)
### Tratando as datas
MR[ , c(2,3,5)] <- lapply(MR[ , c(2,3,5)], as.Date,format = "%Y-%m-%d", origin="2018-01-01")
head(MR)
MR$alta_motivo <- case_when(  MR$document.alta.motivo == 'Alta  Medica' |
MR$document.alta.motivo == 'Alta  Melhor' |
MR$document.alta.motivo == 'Alta com previs?o de retorno para acompanhamento do paciente' |
MR$document.alta.motivo == 'Alta curado' |
MR$document.alta.motivo == 'Alta da M?e  Puerpera com obito fetal' |
MR$document.alta.motivo == 'Alta da M?e  Puerpera e obito do recem-nascido' |
MR$document.alta.motivo == 'Alta da M?e  Puerpera e permanencia do recem-nascido' |
MR$document.alta.motivo == 'Alta da M?e  Puerpera e rescem-nascido' |
MR$document.alta.motivo == 'Alta da M?e / Puerpera com obito fetal' |
MR$document.alta.motivo == 'Alta da m?e/puerpera e do recem-nascido' |
MR$document.alta.motivo == 'Alta da M?e / Puerpera e rescem-nascido' |
MR$document.alta.motivo == 'Alta da M?e / Puerpera e obito do recem-nascido' |
MR$document.alta.motivo == 'Alta da M?e / Puerpera e permanencia do recem-nascido' |
MR$document.alta.motivo == 'Alta da m?epuerpera com obito fetal' |
MR$document.alta.motivo == 'Alta da m?epuerpera e do recem-nascido' |
MR$document.alta.motivo == 'Alta da m?epuerpera e obito recem-nascido' |
MR$document.alta.motivo == 'Alta da m?epuerpera e permanencia do recem-nascido' |
MR$document.alta.motivo == 'ALTA DA PARTURIENTE COM PERMANENCIA DO RECEN NASCIDO' |
MR$document.alta.motivo == 'Alta de paciente agudo em psiquiatria' |
MR$document.alta.motivo == 'ALTA M?E C OBITO FETAL' |
MR$document.alta.motivo == 'ALTA M?E E OBITO DO RECEM-NASCIDO' |
MR$document.alta.motivo == 'ALTA M?E E PERMANENCIA DO RECEM-NASCIDO' |
MR$document.alta.motivo == 'ALTA M?E E RECEM-NASCIDO' |
MR$document.alta.motivo == 'ALTA MEDICA' |
MR$document.alta.motivo == 'Alta melhorado' |
MR$document.alta.motivo == 'Alta para Novo Atendimento' |
MR$document.alta.motivo == 'Alta PS' |
MR$document.alta.motivo == 'Atendimento Finalizado' |
MR$document.alta.motivo == 'Curado' |
MR$document.alta.motivo == 'Melhorado' |
MR$document.alta.motivo == 'MELHORADO' |
MR$document.alta.motivo == 'Melhorado Saida Real' |
MR$document.alta.motivo == 'A pedido' |
MR$document.alta.motivo == 'A PEDIDO' |
MR$document.alta.motivo == 'Alta  Pedido' |
MR$document.alta.motivo == 'Alta a pedido' |
MR$document.alta.motivo == 'Alta a Pedido do Medico' |
MR$document.alta.motivo == 'Alta a Pedido do Paciente' |
MR$document.alta.motivo == 'Alta Apac' |
MR$document.alta.motivo == 'SAIDA A PEDIDO POR RECUSA DE TRATAMENTO' ~ 'Alta' ,
MR$document.alta.motivo == 'Administrativa' |
MR$document.alta.motivo == 'Alta  Administrativa' |
MR$document.alta.motivo == 'Alta Administrativa' |
MR$document.alta.motivo == 'ALTA ADMINISTRATIVA' |
MR$document.alta.motivo == 'Alta por outros motivos' |
MR$document.alta.motivo == 'Apac Cancelada' |
MR$document.alta.motivo == 'Atendimento Cancelado' |
MR$document.alta.motivo == 'Cancelada pelo medico' |
MR$document.alta.motivo == 'Cancelada pelo paciente' |
MR$document.alta.motivo == 'Cancelado' |
MR$document.alta.motivo == 'Cancelado - Abertura de Atend Incorreto' |
MR$document.alta.motivo == 'Cancelado - Abertura de Atend. Incorreto' |
MR$document.alta.motivo == 'CANCELAMENTO DE CIRURGIA' |
MR$document.alta.motivo == 'Cirurgia Cancelada' |
MR$document.alta.motivo == 'Encerramento Administrativo' |
MR$document.alta.motivo == 'Internac?o Cancelada p Pac' |
MR$document.alta.motivo == 'Internamento Cancelado' ~ 'Cancelado',
MR$document.alta.motivo == 'Alta por Evas?o' |
MR$document.alta.motivo == 'ALTA POR EVAS?O' |
MR$document.alta.motivo == 'Evadiu-se' |
MR$document.alta.motivo == 'Evas?o' ~ 'Evasão' ,
MR$document.alta.motivo == 'Inalterado'  ~ 'Inalterado' ,
MR$document.alta.motivo == 'ALTA POR OBITO - 48 HS' |
MR$document.alta.motivo == 'ALTA POR OBITO +48 HS' |
MR$document.alta.motivo == 'Obito' |
MR$document.alta.motivo == 'Obito - Pos-Operatorio (ate 7 dias)' |
MR$document.alta.motivo == 'OBITO APOS 48 HORAS' |
MR$document.alta.motivo == 'Obito com declarac?o fornecida pelo Instituto Medico Legal - IML' |
MR$document.alta.motivo == 'Obito com declarac?o fornecida pelo medico assistente' |
MR$document.alta.motivo == 'Obito com declarac?o fornecida pelo Servico de Verificac?o de Obito - SVO' |
MR$document.alta.motivo == 'Obito da m?epuerpera e permanencia do recem-nascido' |
MR$document.alta.motivo == 'OBITO PRIMEIRAS 48 HORAS AGONICO' |
MR$document.alta.motivo == 'Obito sautopsia, dentro das 48h estado nao agonico' |
MR$document.alta.motivo == 'Obito sautopsia, dentro das 48h, estado agonico' |
MR$document.alta.motivo == 'Obito sautopsia,a partir de 48h apos a internacao' ~ 'Óbito' ,
MR$document.alta.motivo == 'Permanencia por caracteristicas proprias da doenca' |
MR$document.alta.motivo == 'Permanencia por processo de doac?o de org?os, tecidos e celulas - doador morto' |
MR$document.alta.motivo == 'Permanencia por processo de doac?o de org?os, tecidos e celulas - doador vivo' ~ 'Permanência' ,
MR$document.alta.motivo == 'N?O UTILIZAR' |
MR$document.alta.motivo == 'Teste - TI (Tecnologia da Informac?o' ~ 'Teste' ,
MR$document.alta.motivo == 'INTERNAC?O DOMICILIAR' |
MR$document.alta.motivo == 'Para compl Tto ambulatorial' |
MR$document.alta.motivo == 'Para compl. Tto ambulatorial' |
MR$document.alta.motivo == 'Por Indisciplina' |
MR$document.alta.motivo == 'Transferencia Inter-Hospitalar' |
MR$document.alta.motivo == 'Transferencia para internac?o domiciliar' |
MR$document.alta.motivo == 'Transferencia para outra Casa Hospitalar' |
MR$document.alta.motivo == 'TRANSFERENCIA PARA OUTRAS INSTITUIC?ES' |
MR$document.alta.motivo == 'Transferencia para clinica medica' |
MR$document.alta.motivo == 'Transferencia para pediatria' |
MR$document.alta.motivo == 'Transferencia para outro estabelecimento' ~ 'Transferência')
library(knitr)
library(latticeExtra)
library(lattice)
library(MASS)
library(xtable)
library(ggplot2)
library(dplyr)
library(reticulate)
library(reshape)
library(plotly)
#library(esquisse)
library(timetk)
library(tidyquant)
library(tibbletime)
# Visualization
library(cowplot)
library(rpart)
library(rattle)
library(RColorBrewer)
library(DataExplorer)
library(PerformanceAnalytics)
library(ggthemes)
library(corrplot)
library(car)
library(psych)
library(caretEnsemble)
library(doParallel)
library(caret)
library(RANN)
setwd('~/Documentos/protocols/HEG/Model_Exams')
knitr::opts_chunk$set(echo = FALSE,
comment = NA,
warning = FALSE,
message = FALSE,
size = "footnotesize",
tidy = TRUE,
cache = TRUE)
library(dplyr)
library(reticulate)
lm <- glm(wear ~ size,
family = 'gaussian')
size <- c(1.42,1.58,1.78,1.99,1.99,1.99,2.13,2.13,2.13,2.32,
2.32,2.32,2.32,2.32,2.43,2.43,2.78,2.98,2.98)
wear <- c(4,4.2,2.5,2.6,2.8,2.4,3.2,2.4,2.6,4.8,2.9,3.8,3,
2.7,3.1,3.3,3,2.8,1.7)
lm <- glm(wear ~ size,
family = 'gaussian')
summary(lm)
plot(wear ~ size)
lines(lm)
plot(wear ~ size)
lines(lm$fitted.values)
plot(wear ~ size)
abline(lm(wear ~ size))
abline(lm(wear ~ size))
par(mfrow = c(1,2))
plot(x,wear,xlab='Scaled engine size',ylab='Wear index')
size <- c(1.42,1.58,1.78,1.99,1.99,1.99,2.13,2.13,2.13,2.32,
2.32,2.32,2.32,2.32,2.43,2.43,2.78,2.98,2.98)
wear <- c(4,4.2,2.5,2.6,2.8,2.4,3.2,2.4,2.6,4.8,2.9,3.8,3,
2.7,3.1,3.3,3,2.8,1.7)
x <- size-min(size);
x <- x/max(x)
par(mfrow = c(1,2))
plot(x,wear,xlab='Scaled engine size',ylab='Wear index')
rk <- function(x,z) ## R(x,z) for cubic spline on [0,1]
{ ((z-0.5^2)-1/12)*((x-0.5^2)-1/12)/4-
((abs(x-z)-0.5)^4-(abs(x-z)-0.5)^2/2+7/240)/24
}
spl.X <- function(x,xk)
## set up model matrix for cubic penalized regression spline
{      q <- length(xk) + 2 # number of parameters
n <- length(x)      # number of data
X <- matrix(1,n,q)  # initialized model matrix
X[,2] <- x      # set second column to x
X[,3:q] <- outer(x,xk, FUN=rk)
X
}
xk <- 1:4/5     # choose some knots
X <- spl.X(x,xk)    # generated model matrix
mod.1 <- lm(wear~X-1)   # fit model
xp <- 0:100/100     # x values for prediction
Xp <- spl.X(xp,xk)  # prediction matrix
lines(xp,Xp%*%coef(mod.1),col='red')
lm <- glm(wear ~ size,
family = 'gaussian')
plot(wear ~ size)
abline(lm(wear ~ size))
1:4/5
points(xk[1],4)
plot(x,wear,
xlab='Tamanho do motor',
ylab='Índice de desgaste',
pch = 19)
rk <- function(x,z) ## R(x,z) for cubic spline on [0,1]
{ ((z-0.5^2)-1/12)*((x-0.5^2)-1/12)/4-
((abs(x-z)-0.5)^4-(abs(x-z)-0.5)^2/2+7/240)/24
}
spl.X <- function(x,xk)
## set up model matrix for cubic penalized regression spline
{      q <- length(xk) + 2 # number of parameters
n <- length(x)      # number of data
X <- matrix(1,n,q)  # initialized model matrix
X[,2] <- x      # set second column to x
X[,3:q] <- outer(x,xk, FUN=rk)
X
}
xk <- 1:4/5     # choose some knots
X <- spl.X(x,xk)    # generated model matrix
mod.1 <- lm(wear~X-1)   # fit model
xp <- 0:100/100     # x values for prediction
Xp <- spl.X(xp,xk)  # prediction matrix
lines(xp,Xp%*%coef(mod.1),
col='darkblue',
lwd = 3)
lines(h = xk[1],0 )
sens <- data.frame(x=unlist(performance(predictions, "sens")@x.values),
y=unlist(performance(predictions, "sens")@y.values))
sens <- data.frame(x=unlist(ROC::performance(predictions, "sens")@x.values),
y=unlist(ROC::performance(predictions, "sens")@y.values))
install.pacakges('ROC')
y=unlist(ROC::performance(predictions, "sens")@y.values))
install.packages('ROC')
sens <- data.frame(x=unlist(ROC::performance(predictions, "sens")@x.values),
y=unlist(ROC::performance(predictions, "sens")@y.values))
library(ROC)
sens <- data.frame(x=unlist(ROC::performance(predictions, "sens")@x.values),
y=unlist(ROC::performance(predictions, "sens")@y.values))
sens <- data.frame(x=unlist(performance(predictions, "sens")@x.values),
y=unlist(performance(predictions, "sens")@y.values))
library(ROCR)
sens <- data.frame(x=unlist(performance(predictions, "sens")@x.values),
y=unlist(performance(predictions, "sens")@y.values))
pred <- predict(model1, newdata=df, type="response")
df <- data.frame(a=sort(sample(1:100,30)), b= sort(sample(1:100,30)),
target=c(rep(0,11),rep(1,4),rep(0,4),rep(1,11)))
model1 <- glm(formula= target ~ a + b, data=df, family=binomial)
pred <- predict(model1, newdata=df, type="response")
predictions <- prediction(pred,labels)
head(pred)
head(pred)
summary(pred)
predictions <- prediction(pred,df$target)
library(ROCR)
sens <- data.frame(x=unlist(performance(predictions, "sens")@x.values),
y=unlist(performance(predictions, "sens")@y.values))
spec <- data.frame(x=unlist(performance(predictions, "spec")@x.values),
y=unlist(performance(predictions, "spec")@y.values))
sens %>% ggplot(aes(x,y)) +
geom_line() +
geom_line(data=spec, aes(x,y,col="red")) +
scale_y_continuous(sec.axis = sec_axis(~., name = "Specificity")) +
labs(x='Cutoff', y="Sensitivity") +
theme(axis.title.y.right = element_text(colour = "red"), legend.position="none")
df <- data.frame(a=sort(sample(1:100,30)), b= sort(sample(1:100,30)),
target=c(rep(0,11),rep(1,4),rep(0,4),rep(1,11)))
model1 <- glm(formula= target ~ a + b, data=df, family=binomial)
pred <- predict(model1, newdata=df, type="response")
predictions <- prediction(pred,df$target)
library(ROCR)
sens <- data.frame(x=unlist(performance(predictions, "sens")@x.values),
y=unlist(performance(predictions, "sens")@y.values))
spec <- data.frame(x=unlist(performance(predictions, "spec")@x.values),
y=unlist(performance(predictions, "spec")@y.values))
sens %>% ggplot(aes(x,y)) +
geom_line() +
geom_line(data=spec, aes(x,y,col="red")) +
scale_y_continuous(sec.axis = sec_axis(~., name = "Especificidade")) +
labs(x='Cutoff', y="Sensibilidade") +
theme(axis.title.y.right = element_text(colour = "red"), legend.position="none")
#ENTITY_ML <- 'accamargo_generalized_lightgbm'
ENTITY_ML <- 'generalized_lightgbm'
library(rmarkdown)
render('validation_ml_report', params = 'ask')
render('validation_ml_report.Rmd', params = 'ask')
setwd("~/Documentos/minicurso_cutoff")
render('validation_ml_report.Rmd', params = 'ask')
library(knitr)
library(readr) # Ler csv com ; como delimitador.
library(kableExtra) # Tabelas mais visuais.
library(lubridate) # Datas.
library(ggplot2) # Gráficos
# Time Series
library(timetk)
library(tidyquant)
library(tibbletime)
# Visualization
library(cowplot)
library(plotly)
# Preprocessing
library(recipes)
install.packages('recipes')
install.packages("recipes")
# Preprocessing
library(recipes)
# Sampling / Accuracy
library(rsample)
library(yardstick)
sapply(c('dplyr','DataExplorer','tidyr','stringr'),
library,char = T)
render('validation_ml_report.Rmd', params = 'ask')
library(rmarkdown)
render('validation_ml_report.Rmd', params = 'ask')
dir()
browseURL('validation_ml_report.html')
#ENTITY_ML <- 'accamargo_generalized_lightgbm'
ENTITY_ML <- 'generalized_lightgbm'
library(rmarkdown)
render("validation_ml_report.Rmd",
params = 'ask')
setwd("~/ML")
getwd()
render_site()
